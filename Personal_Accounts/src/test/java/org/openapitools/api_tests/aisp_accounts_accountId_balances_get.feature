# ********RoostGPT********

# Test generated by RoostGPT for test hsbc-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /aisp/accounts/{accountId}/balances_get for http method type GET 
# RoostTestHash=0095e68c59
# 
# 

# ********RoostGPT********
Feature: Test /aisp/accounts/{accountId}/balances API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * configure headers = {Authorization: '#(authToken)', 'x-fapi-auth-date': 'Sun, 10 Sep 2017 19:43:31 UTC', 'x-fapi-customer-ip-address': '169.254.169.254', 'x-fapi-interaction-id': '123456789', 'Accept-Language': 'en-US'}

Scenario Outline: Test GET /aisp/accounts/{accountId}/balances with valid inputs
  Given path 'aisp', 'accounts', <accountId>, 'balances'
  When method get
  Then status 200
  And match response contains {data: '#object', links: '#object'}
  And match response.data contains {account: '#array'}
  And match response.links contains {self: '#string'}
  Examples:
    | accountId |
    | 'ThR-RpLMV5lZzDu8vrfEFg' |

# Currently the mock server only supports valid inputs with 200 status code
# Scenario Outline: Test GET /aisp/accounts/{accountId}/balances with invalid inputs
#   Given path 'aisp', 'accounts', <accountId>, 'balances'
#   When method get
#   Then status 400
#   And match response contains {id: '#string', errors: '#array'}
#   Examples:
#     | accountId |
#     | '' |
#     | 'invalidAccountId' |

# Scenario: Test GET /aisp/accounts/{accountId}/balances without authorization
#   * configure headers = {Authorization: ''}
#   Given path 'aisp', 'accounts', 'ThR-RpLMV5lZzDu8vrfEFg', 'balances'
#   When method get
#   Then status 401

# Scenario: Test GET /aisp/accounts/{accountId}/balances with unauthorized user
#   * configure headers = {Authorization: 'Bearer invalidToken'}
#   Given path 'aisp', 'accounts', 'ThR-RpLMV5lZzDu8vrfEFg', 'balances'
#   When method get
#   Then status 403
